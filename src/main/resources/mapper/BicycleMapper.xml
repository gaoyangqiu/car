<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.carrental.dao.BicycleMapper" >
  <resultMap id="BaseResultMap" type="com.carrental.entity.Bicycle" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="BIGINT" />
    <result column="price" property="price" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="deflag" property="deflag" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, number, price, type, status, deflag
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bicycle
    where id = #{id,jdbcType=INTEGER}
  </select>


    <select id="findAll" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from bicycle
    </select>
    <select id="getCout" resultType="java.lang.Integer">
        SELECT COUNT(*) from bicycle
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bicycle
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.carrental.entity.Bicycle" >
    insert into bicycle (id, name, number, 
      price, type, status, 
      deflag)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{number,jdbcType=BIGINT}, 
      #{price,jdbcType=BIGINT}, #{type,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, 
      #{deflag,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.carrental.entity.Bicycle" >
    insert into bicycle
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="deflag != null" >
        deflag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=BIGINT},
      </if>
      <if test="price != null" >
        #{price,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="deflag != null" >
        #{deflag,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.carrental.entity.Bicycle" >
    update bicycle
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=BIGINT},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="deflag != null" >
        deflag = #{deflag,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.carrental.entity.Bicycle" >
    update bicycle
    set name = #{name,jdbcType=VARCHAR},
      number = #{number,jdbcType=BIGINT},
      price = #{price,jdbcType=BIGINT},
      type = #{type,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      deflag = #{deflag,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>